https://8weeksqlchallenge.com/case-study-1/

CREATE SCHEMA dannys_diner;
SET search_path = dannys_diner;

CREATE TABLE sales (
  "customer_id" VARCHAR(1),
  "order_date" DATE,
  "product_id" INTEGER
);

INSERT INTO sales
  ("customer_id", "order_date", "product_id")
VALUES
  ('A', '2021-01-01', '1'),
  ('A', '2021-01-01', '2'),
  ('A', '2021-01-07', '2'),
  ('A', '2021-01-10', '3'),
  ('A', '2021-01-11', '3'),
  ('A', '2021-01-11', '3'),
  ('B', '2021-01-01', '2'),
  ('B', '2021-01-02', '2'),
  ('B', '2021-01-04', '1'),
  ('B', '2021-01-11', '1'),
  ('B', '2021-01-16', '3'),
  ('B', '2021-02-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-01', '3'),
  ('C', '2021-01-07', '3');
 

CREATE TABLE menu (
  "product_id" INTEGER,
  "product_name" VARCHAR(5),
  "price" INTEGER
);

INSERT INTO menu
  ("product_id", "product_name", "price")
VALUES
  ('1', 'sushi', '10'),
  ('2', 'curry', '15'),
  ('3', 'ramen', '12');
  

CREATE TABLE members (
  "customer_id" VARCHAR(1),
  "join_date" DATE
);

INSERT INTO members
  ("customer_id", "join_date")
VALUES
  ('A', '2021-01-07'),
  ('B', '2021-01-09');

-- 1. What is the total amount each customer spent at the restaurant?
select s.customer_id, sum(m.price)
from dannys_diner.sales AS s
inner join dannys_diner.menu AS m ON
s.product_id=m.product_id
group by s.customer_id;

-- 2. How many days has each customer visited the restaurant?
select customer_id, count(DISTINCT order_date)
from dannys_diner.sales
group by customer_id;

-- 3. What was the first item(s) from the menu purchased by each customer?
SELECT customer_id, product_id
FROM dannys_diner.sales D
WHERE order_date = (SELECT MIN(order_date) FROM dannys_diner.sales WHERE customer_ID = D.customer_ID);

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?
select m.product_name, count(s.product_id)
from dannys_diner.sales AS s
INNER JOIN dannys_diner.menu AS m
ON s.product_id=m.product_id
group by m.product_name
limit 1;

-- 5. Which item was the most popular for each customer?
with counts_item AS (
  select customer_id, product_id, count(product_id) AS countp, dense_rank() over (partition by customer_id order by count(product_id) DESC) AS rank
  from dannys_diner.sales
  group by customer_id,product_id)
select customer_id, product_id, countp
from counts_item
where rank=1

-- 6. Which item was purchased first by the customer after they became a member?
with last_purchase as (
  select s.customer_id, s.product_id, dense_rank() over (partition by s.customer_id order by s.order_date) AS rank
  from dannys_diner.sales AS s
  inner join dannys_diner.members AS m
  ON s.customer_id=m.customer_id
  where s.order_date>=m.join_date)
select customer_id, product_id
  from last_purchase
  where rank=1;

-- 7. Which item was purchased just before the customer became a member?
with first_purchase_after as (
  select s.customer_id, s.product_id, dense_rank() over (partition by s.customer_id order by s.order_date desc) AS rank
  from dannys_diner.sales AS s
  inner join dannys_diner.members AS m
  ON s.customer_id=m.customer_id
  where s.order_date<m.join_date)
select customer_id, product_id
  from first_purchase_after
  where rank=1;

-- 8. What is the total items and amount spent for each member before they became a member?
select s.customer_id, count(*), sum(m1.price)
from dannys_diner.sales AS s
INNER JOIN dannys_diner.menu AS m1
ON s.product_id=m1.product_id
INNER JOIN dannys_diner.members AS m2
ON s.customer_id=m2.customer_id
WHERE s.order_date<m2.join_date
group by s.customer_id;

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
with points AS (
  select s.customer_id,
  		case when m.product_name = 'sushi' THEN price*20
  		else price*10 END AS point
  from dannys_diner.sales AS s
  inner join dannys_diner.menu AS m
  ON s.product_id=m.product_id)
select customer_id, sum(point)
from points
group by customer_id;

-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
with points AS (
  select s.customer_id,
  		case when (m1.product_name = 'sushi') OR (s.order_date-m2.join_date<7 AND s.order_date-m2.join_date>=0) THEN price*20
  		else price*10 END AS point
  from dannys_diner.sales AS s
  inner join dannys_diner.menu AS m1
  ON s.product_id=m1.product_id
inner join dannys_diner.members AS m2
ON s.customer_id=m2.customer_id)
select customer_id, sum(point)
from points
group by customer_id;

-- Bonus
with new_table AS (
  select s.customer_id, s.order_date, m1.product_name, m1.price, 
  	case when (s.order_date-m2.join_date>=0) THEN 'Y'
  	ELSE 'N' END AS member
  from dannys_diner.sales AS s
  join dannys_diner.menu AS m1
  ON s.product_id=m1.product_id
  left join dannys_diner.members AS m2
  ON s.customer_id=m2.customer_id)
  
 select *,
 case when member = 'Y' THEN dense_rank() OVER(partition by member, customer_id order by order_date)
  	ELSE null END AS ranking
 from new_table;
